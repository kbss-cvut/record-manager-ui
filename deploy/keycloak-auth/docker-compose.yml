# Provide logging to Java application (e.g. record-manager-server)
x-logging-java-application: &logging-java
  LOGGING_LEVEL_ROOT: "debug"

# Expose port to access db-server directly, bypassing nginx
x-access-db-server-development-port: &db-server-dev-port
  ports:
    - "127.0.0.1:${DB_SERVER_DEV_PORT:-7205}:7200"

services:
  nginx:
    image: nginx:latest
    container_name: ${RECORD_SET_NAME:-rm}-nginx
    ports:
      - "127.0.0.1:${INTERNAL_HOST_PORT:-1235}:80"
    restart: always
    depends_on:
      - record-manager
      - record-manager-server
      - s-pipes-engine
      - db-server
    environment:
      NGINX_ENVSUBST_OUTPUT_DIR: /etc/nginx
      APP_ORIGIN: "${PUBLIC_ORIGIN:-http://localhost:${INTERNAL_HOST_PORT:-1235}}"
      APP_ROOT_PATH: "${APP_ROOT_PATH:-}"
      RECORD_MANAGER_PATH: "${RECORD_MANAGER_PATH:-/record-manager}"
      ANALYTICS_PATH: "${ANALYTICS_PATH:-/statistics}"
      INTERNAL_RECORD_MANAGER_SERVER_SERVICE: "${INTERNAL_RECORD_MANAGER_SERVER_SERVICE:-http://record-manager-server:8080}"
      INTERNAL_SPIPES_ENGINE_SERVICE: "${INTERNAL_SPIPES_ENGINE_SERVICE:-http://s-pipes-engine:8080}"

    volumes:
      - ./nginx/nginx.conf:/etc/nginx/templates/nginx.conf.template:ro
      - ../shared/nginx/error.html:/usr/share/nginx/html/error.html:ro
      - ./nginx/index.html:/usr/share/nginx/html/index.html:ro
      - ../shared/nginx/images:/usr/share/nginx/html/images:ro
      - ../shared/nginx/statistics.html:/usr/share/nginx/html/statistics.html:ro

  record-manager:
    image: ghcr.io/kbss-cvut/record-manager-ui:latest
    container_name: ${RECORD_SET_NAME:-rm}-record-manager
    expose:
      - "80"
    restart: always
    depends_on:
      - record-manager-server
    environment:
      API_URL: "${PUBLIC_ORIGIN:-http://localhost:${INTERNAL_HOST_PORT:-1235}}${APP_ROOT_PATH:-}/services/record-manager-server"
      APP_INFO: "${RECORD_MANAGER_APP_INFO:-}"
      APP_TITLE: "${RECORD_MANAGER_APP_TITLE:-Record Manager}"
      APP_LANGUAGE: "${APP_LANGUAGE:-en}"
      NAVIGATOR_LANGUAGE: "false"
      BASENAME: "${APP_ROOT_PATH:-}${RECORD_MANAGER_PATH:-/record-manager}"
      AUTHENTICATION: "oidc"
      AUTH_SERVER_URL: "${PUBLIC_ORIGIN:-http://localhost:${INTERNAL_HOST_PORT:-1235}}${APP_ROOT_PATH:-}/services/auth/realms/record-manager"
      AUTH_CLIENT_ID: "record-manager"
      ANALYTICS_URL: "${PUBLIC_ORIGIN:-http://localhost:${INTERNAL_HOST_PORT:-1235}}${APP_ROOT_PATH:-}${ANALYTICS_PATH:-/statistics}"
      EXTENSIONS: "${RECORD_MANAGER_EXTENSIONS:-supplier}"

  record-manager-server:
    image: ghcr.io/kbss-cvut/record-manager:latest
    container_name: ${RECORD_SET_NAME:-rm}-record-manager-server
    expose:
      - "8080"
    restart: always
    depends_on:
      - s-pipes-engine
      - db-server
    environment:
      appContext: "${PUBLIC_ORIGIN:-http://localhost:${INTERNAL_HOST_PORT:-1235}}${APP_ROOT_PATH:-}${RECORD_MANAGER_PATH:-/record-manager}"
      repositoryUrl: "http://db-server:7200/repositories/record-manager-app"
      formGenRepositoryUrl: "http://db-server:7200/repositories/record-manager-formgen"
      formGenServiceUrl: "${FORMGEN_SERVICE_URL:-${INTERNAL_SPIPES_ENGINE_SERVICE:-http://s-pipes-engine:8080}/s-pipes/service?${FORMGEN_SERVICE_QUERY_PARAMS:-_pId=clone-form}}"
      SECURITY_PROVIDER: "oidc"
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUERURI: "${PUBLIC_ORIGIN:-http://localhost:${INTERNAL_HOST_PORT:-1235}}${APP_ROOT_PATH:-}/services/auth/realms/record-manager"
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWKSETURI: "http://auth-server:8080/realms/record-manager/protocol/openid-connect/certs"
      SERVER_MAXHTTPREQUESTHEADERSIZE: "40KB"

  s-pipes-engine:
    image: ghcr.io/kbss-cvut/s-pipes/s-pipes-engine:latest
    container_name: ${RECORD_SET_NAME:-rm}-s-pipes-engine
    expose:
      - "8080"
    restart: always
    depends_on:
      - db-server
    environment:
      FORMGEN_REPOSITORY_URL: "http://db-server:7200/repositories/record-manager-formgen"
    volumes:
      - ../shared/s-pipes-engine/scripts:/scripts/root:ro

  db-server:
    <<: *db-server-dev-port
    build:
      context: ../shared/db-server
    image: ${RECORD_SET_NAME:-rm}-db-server
    container_name: ${RECORD_SET_NAME:-rm}-db-server
    environment:
      GDB_JAVA_OPTS: "-Dgraphdb.external-url=${PUBLIC_ORIGIN:-http://localhost:${INTERNAL_HOST_PORT:-1235}}${APP_ROOT_PATH:-}/services/db-server"
    expose:
      - "7200"
    restart: always
    volumes:
      - ../shared/db-server/import:/root/graphdb-import:ro
      - db-server:/opt/graphdb/home

  auth-server-db:
    image: postgres:13
    container_name: ${RECORD_SET_NAME:-rm}-auth-server-db
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - auth-server-db:/var/lib/postgresql/data

  auth-server:
    build:
      context: auth-server
    container_name: ${RECORD_SET_NAME:-rm}-auth-server
    command:
      - start --import-realm --features="token-exchange,admin-fine-grained-authz"
    environment:
      KC_IMPORT: realm-export.json
      KC_HOSTNAME_URL: "${PUBLIC_ORIGIN:-http://localhost:${INTERNAL_HOST_PORT:-1235}}${APP_ROOT_PATH:-}/services/auth/"
      KC_HOSTNAME_ADMIN_URL: "${PUBLIC_ORIGIN:-http://localhost:${INTERNAL_HOST_PORT:-1235}}${APP_ROOT_PATH:-}/services/auth/"
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HTTP_ENABLED: true
      KEYCLOAK_ADMIN: ${KC_ADMIN_USER}
      KEYCLOAK_ADMIN_PASSWORD: ${KC_ADMIN_PASSWORD}
      DB_VENDOR: POSTGRES
      DB_ADDR: auth-server-db
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: keycloak
      DB_SCHEMA: "public"
      DB_SERVER_URL: "http://db-server:7200"
      DB_SERVER_REPOSITORY_ID: "record-manager-app"
      REPOSITORY_LANGUAGE: "en"
      VOCABULARY_USER_TYPE: "http://xmlns.com/foaf/0.1/Person"
      VOCABULARY_USER_FIRST_NAME: "http://xmlns.com/foaf/0.1/firstName"
      VOCABULARY_USER_LAST_NAME: "http://xmlns.com/foaf/0.1/lastName"
      VOCABULARY_USER_USERNAME: "http://xmlns.com/foaf/0.1/accountName"
      VOCABULARY_USER_EMAIL: "http://xmlns.com/foaf/0.1/mbox"
      NAMESPACES: "http://xmlns.com/foaf/0.1/Person/"
      DB_SERVER_CONTEXT: "http://xmlns.com/foaf/0.1/Person/"
      ADD_ACCOUNTS: false
      REALM_ID: "record-manager"
    expose:
      - "8080"
    volumes:
      - auth-server:/opt/keycloak/data
      - ./keycloak:/opt/keycloak/data/import
    depends_on:
      - auth-server-db

  keycloak-config:
    image: hashicorp/terraform:light
    working_dir: /workspace
    volumes:
      - ./terraform:/workspace
    depends_on:
      - auth-server
    entrypoint: ["/bin/sh", "-c"]
    environment:
      - TF_VAR_kc_admin_user=${KC_ADMIN_USER}
      - TF_VAR_kc_admin_password=${KC_ADMIN_PASSWORD}
      - TF_VAR_kc_realm=record-manager
      - TF_VAR_kc_url=http://auth-server:8080/
    command: >
      "until nc -z auth-server 8080; do sleep 1; done &&
       terraform init &&
       terraform apply -auto-approve"

volumes:
  db-server:
  auth-server:
  auth-server-db:
